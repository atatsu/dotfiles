#!/usr/bin/env python

import json
import sys
import subprocess


def update_count():
    pac = subprocess.Popen(['pacman', '-Qu'], stdout=subprocess.PIPE)
    count = subprocess.check_output(['wc', '-l'], stdin=pac.stdout)
    return count.strip().decode('utf-8')


def update_music():
    stats = subprocess.check_output(['/home/atatsu/.i3/contrib/mpd.sh'])
    return stats.strip().decode('utf-8')


def read_line():
    try:
        line = sys.stdin.readline().strip()
        if line is None:
            sys.exit(3)
        return line
    except KeyboardInterrupt:
        sys.exit()


def print_line(message):
    sys.stdout.write('{}\n'.format(message))
    sys.stdout.flush()


if __name__ == '__main__':
    # first line is version info
    print_line(read_line())

    # second line begins the infinite array
    print_line(read_line())

    while True:
        line, prefix = read_line(), ''
        if line.startswith(','):
            line, prefix = line[1:], ','

        status = json.loads(line)

        for stat in status:
            if 'instance' in stat:
                if stat['instance'] == '/home':
                    stat['color'] = '#01A9DB'
                elif stat['instance'] == '/var':
                    stat['color'] = '#0489B1'

        status.insert(
            0,
            dict(
                full_text='â‡§ {}'.format(update_count()),
                name='pacman',
                color='#80FF00',
            ),
        )

        status.insert(
            1,
            dict(
                full_text=update_music(),
                name='music',
                color='#FFFFFF',
            ),
        )

        print_line('{prefix}{status}'.format(
            prefix=prefix,
            status=json.dumps(status),
        ))
